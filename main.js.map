{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/currency-exchange/currency-exchange.component.ts","./src/app/currency-exchange/currency-exchange.component.html","./src/app/services/crypto-api.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { animate, style, transition, trigger } from '@angular/animations';\r\nimport { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { Subscription } from 'rxjs';\r\nimport { CryptoApiService } from './services/crypto-api.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  animations: [\r\n    trigger('enterAnimation', [\r\n      transition(':enter', [\r\n        style({ opacity: 0 }),\r\n        animate('750ms', style({ opacity: 1 })),\r\n      ]),\r\n      transition(':leave', [\r\n        style({ opacity: 1 }),\r\n        animate('750ms', style({ opacity: 0 })),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  coins: any[] = [];\r\n  marketList: any[] = [];\r\n  marketListFav: any[] = [];\r\n  columnsToDisplay: any[] = ['rank', 'name', 'price', 'marketCap'];\r\n  favoriteArr: any[] = [];\r\n  favoriteArrId: any[] = [];\r\n  fiatsArr: any[] = [];\r\n  plotTickr: any[] = [];\r\n  tickrArr: any[] = [];\r\n  fiatSubscription: Subscription;\r\n  coinsSubscription: Subscription;\r\n  tickrSbscription: Subscription;\r\n  marketSubscription: Subscription;\r\n  favSubscription: Subscription;\r\n  rankAsc = false;\r\n  nameAsc = false;\r\n  priceAsc = false;\r\n  isFirst = true;\r\n  getScreenWidth: any;\r\n  marketAsc = false;\r\n  changeAsc = false;\r\n  showValues: any[] = [];\r\n  breakpoint: any;\r\n  page = {\r\n    p1: 0,\r\n    p2: 0,\r\n    p3: 0,\r\n  };\r\n  showArr: any[] = ['rank'];\r\n  private paginator: MatPaginator;\r\n  expandedElement: any;\r\n  dataSource: any;\r\n  language: any = 'INR';\r\n  currency1a:any={name:'Select',imageUrl:'',rate:1};\r\n  currency2a:any={name:'Select',imageUrl:'',rate:1};\r\n  tickrSymbol: any = 'BTC';\r\n  fetchStatus: string = 'fetching';\r\n  favFetchStatus: string = 'fetching';\r\n  mainStatus: string = 'fetching';\r\n  isScreenLtMedium: boolean = false;\r\n  currency1Value:number;\r\n  currency2Value:number;\r\n  rate1:number;\r\n  rate2:number;\r\n  constructor(private cryptoSrv: CryptoApiService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.breakpoint = window.innerWidth <= 400 ? 1 : 6;\r\n    this.onWindowResize();\r\n    this.getCoinsList('INR');\r\n    this.getFiats();\r\n    setInterval(() => {\r\n      this.isFirst = !this.isFirst;\r\n    }, 4500);\r\n  }\r\n  @HostListener('window:resize', ['$event'])\r\n  onWindowResize() {\r\n    this.getScreenWidth = window.innerWidth;\r\n    if (this.getScreenWidth <= 850) {\r\n      this.isScreenLtMedium = true;\r\n    } else {\r\n      this.isScreenLtMedium = false;\r\n    }\r\n    this.breakpoint = this.isScreenLtMedium ? 1 : 6;\r\n  }\r\n  getFiats() {\r\n    this.fiatSubscription = this.cryptoSrv.getFiats().subscribe((res: any) => {\r\n      this.fiatsArr = res;\r\n    });\r\n  }\r\n  getCoinsList(fiatCode?: any) {\r\n    this.mainStatus = 'fetching';\r\n    this.favoriteArr = [];\r\n    this.coinsSubscription = this.cryptoSrv\r\n      .getCoinsList(fiatCode)\r\n      .subscribe((res: any) => {\r\n        this.coins = res.coins;\r\n        this.tickrArr = this.coins.slice(0, 3);\r\n        this.getTickrValues();\r\n        if (this.favoriteArrId.length > 0) {\r\n          this.favoriteArr = [];\r\n          const temp = this.coins.filter(\r\n            (coin: any) => this.favoriteArrId.indexOf(coin.id) !== -1\r\n          );\r\n          this.favoriteArr = temp;\r\n        }\r\n\r\n        this.mainStatus = 'done';\r\n      });\r\n  }\r\n  getTickrValues() {\r\n    this.showValues = [];\r\n    this.tickrArr.forEach((tkr: any) => {\r\n      this.tickrSbscription = this.cryptoSrv\r\n        .getMarkets(tkr.id)\r\n        .subscribe((res: any) => {\r\n          this.showValues.push(res.splice(0, 10));\r\n          this.plotTickr = this.showValues[0];\r\n        });\r\n    });\r\n  }\r\n  getMarkets(coinId: any) {\r\n    this.fetchStatus = 'fetching';\r\n    this.marketSubscription = this.cryptoSrv\r\n      .getMarkets(coinId)\r\n      .subscribe((res: any) => {\r\n        this.marketList = res;\r\n        this.fetchStatus = 'done';\r\n      });\r\n  }\r\n\r\n  getMarketsFav(coinId: any) {\r\n    this.favFetchStatus = 'fetching';\r\n    this.favSubscription = this.cryptoSrv\r\n      .getMarkets(coinId)\r\n      .subscribe((res: any) => {\r\n        this.marketListFav = res;\r\n        this.favFetchStatus = 'done';\r\n      });\r\n  }\r\n  addToFav(coin: any) {\r\n    this.favoriteArr = this.favoriteArr.filter((cn: any) => cn.id !== coin.id);\r\n    this.favoriteArrId = this.favoriteArrId.filter((cn: any) => cn !== coin.id);\r\n    this.favoriteArr.push(coin);\r\n    this.favoriteArrId.push(coin.id);\r\n    var element = document.getElementById('favId');\r\n    setTimeout(() => {\r\n      element.scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: 'end',\r\n        inline: 'nearest',\r\n      });\r\n    });\r\n  }\r\n  removeFromFav(coin: any) {\r\n    this.favoriteArr = this.favoriteArr.filter((cn: any) => cn.id !== coin.id);\r\n    this.favoriteArrId = this.favoriteArrId.filter((cn: any) => cn !== coin.id);\r\n  }\r\n  setFiat(fiatCode: any) {\r\n    this.fiatsArr.forEach((fiat: any) => {\r\n      if (fiat.name === fiatCode) {\r\n        this.language = fiat.name;\r\n      }\r\n    });\r\n    this.nameAsc = false;\r\n    this.rankAsc = false;\r\n    this.priceAsc = false;\r\n    this.marketAsc = false;\r\n    this.changeAsc = false;\r\n    this.showArr = [];\r\n    this.showArr.push('rank');\r\n    this.getCoinsList(fiatCode);\r\n    this.tickrSymbol = 'BTC';\r\n  }\r\n  setTickr(ind: any) {\r\n    this.plotTickr = this.showValues[ind];\r\n    this.tickrSymbol = this.tickrArr[ind].symbol;\r\n  }\r\n  sortBy(sortType: any) {\r\n    this.showArr = [];\r\n    this.showArr.push(sortType);\r\n    switch (sortType) {\r\n      case 'rank':\r\n        this.sortLogic(sortType, this.rankAsc);\r\n        this.rankAsc = !this.rankAsc;\r\n        this.nameAsc = false;\r\n        this.priceAsc = false;\r\n        this.marketAsc = false;\r\n        this.changeAsc = false;\r\n        break;\r\n      case 'symbol':\r\n        this.sortLogic(sortType, this.nameAsc);\r\n        this.nameAsc = !this.nameAsc;\r\n        this.rankAsc = false;\r\n        this.priceAsc = false;\r\n        this.marketAsc = false;\r\n        this.changeAsc = false;\r\n        break;\r\n      case 'price':\r\n        this.sortLogic(sortType, this.priceAsc);\r\n        this.priceAsc = !this.priceAsc;\r\n        this.nameAsc = false;\r\n        this.rankAsc = false;\r\n        this.marketAsc = false;\r\n        this.changeAsc = false;\r\n        break;\r\n      case 'marketCap':\r\n        this.sortLogic(sortType, this.marketAsc);\r\n        this.marketAsc = !this.marketAsc;\r\n        this.nameAsc = false;\r\n        this.priceAsc = false;\r\n        this.rankAsc = false;\r\n        this.changeAsc = false;\r\n        break;\r\n      case 'priceChange1d':\r\n        this.sortLogic(sortType, this.changeAsc);\r\n        this.changeAsc = !this.changeAsc;\r\n        this.nameAsc = false;\r\n        this.priceAsc = false;\r\n        this.marketAsc = false;\r\n        this.rankAsc = false;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  sortLogic(sortType: any, boolVal: any) {\r\n    if (boolVal) {\r\n      this.coins.sort((a: any, b: any) => (a[sortType] > b[sortType] ? 1 : -1));\r\n    } else {\r\n      this.coins.sort((a: any, b: any) => (a[sortType] < b[sortType] ? 1 : -1));\r\n    }\r\n  }\r\n\r\n  changePage(event: PageEvent, ind: any) {\r\n    if (ind === 1) {\r\n      this.page.p1 = event.pageIndex * 10;\r\n    } else if (ind === 2) {\r\n      this.page.p2 = event.pageIndex * 10;\r\n    } else if (ind === 3) {\r\n      this.page.p3 = event.pageIndex * 10;\r\n    }\r\n  }\r\n\r\n\r\n  dealCurrency(currency, num){\r\n    console.log(currency,num)\r\n    switch(num){\r\n      case 1:\r\n        this.currency1a=currency\r\n        this.rate1=this.currency1a.rate\r\n        this.handleCal(2)\r\n        break;\r\n      case 2:\r\n        this.currency2a=currency\r\n        this.rate2=this.currency2a.rate\r\n        this.handleCal(1)\r\n        break;\r\n    }\r\n  }\r\n\r\nhandleCal(num){\r\n  if(num===1){\r\n    if(this.rate2>this.rate1){\r\n      this.currency2Value=this.currency1Value*this.rate2\r\n    }else if(this.rate2<this.rate1){\r\n      this.currency2Value=this.currency1Value/this.rate1\r\n    }else{\r\n      this.currency2Value=this.currency1Value\r\n    }\r\n    \r\n  }else if(num===2){\r\n    if(this.rate1>this.rate2){\r\n      this.currency1Value=this.currency2Value*this.rate1\r\n    }else if(this.rate1<this.rate2){\r\n      this.currency1Value=this.currency2Value/this.rate2\r\n    }else{\r\n      this.currency1Value=this.currency2Value\r\n    }\r\n  }\r\n\r\n  if(this.currency1Value===0){\r\n    this.currency1Value=undefined\r\n  }\r\n  if(this.currency2Value===0){\r\n    this.currency2Value=undefined\r\n  }\r\n  \r\n}\r\n\r\n  ngOnDestroy(): void {\r\n    this.fiatSubscription.unsubscribe();\r\n    this.fiatSubscription.unsubscribe();\r\n    this.coinsSubscription.unsubscribe();\r\n    this.tickrSbscription.unsubscribe();\r\n    this.marketSubscription.unsubscribe();\r\n    this.favSubscription.unsubscribe();\r\n  }\r\n}\r\n","<!-- Requirements:\r\n1. Index Page with a list of currencies which lists global avg prices.\r\n2. Clicking on an individual coin, please integrate an accordion menu which will expand\r\nand show all the prices in the market(Get Markets). No need to integrate the graphs.\r\n3. Add filter to show all the Fiat Currencies, On selecting the option from filter the avg\r\nprices will change to the respective FIAT. Keep the Default currency to INR.(Get Fiats)\r\n4. Build a tickr on the top of the page with any 5 exchanges of your choice and any\r\ncrypto-fiat price of your choice(Get Tickers).\r\n5. Sorting filters based on Price,MarketCap,%Change(1hr,1d).\r\n6. Feature to mark 3 currencies as favourites. -->\r\n\r\n<mat-toolbar color=\"primary\"><span>CryptoCurrency List</span></mat-toolbar>\r\n\r\n<!-- tickr code starts -->\r\n<ng-container>\r\n  <mat-grid-list\r\n    [class.tickr]=\"!isScreenLtMedium\"\r\n    [cols]=\"breakpoint\"\r\n    rowHeight=\"32px\"\r\n  >\r\n    <mat-grid-tile>\r\n      <button\r\n        [matMenuTriggerFor]=\"tickr\"\r\n        matTooltip=\"Select Tickr\"\r\n        mat-button\r\n        class=\"tickrBtn\"\r\n      >\r\n        <span>{{ tickrSymbol | uppercase }}</span>\r\n        <mat-icon>arrow_drop_down</mat-icon>\r\n      </button></mat-grid-tile\r\n    >\r\n    <ng-container *ngIf=\"isFirst\">\r\n      <mat-grid-tile *ngFor=\"let val of plotTickr.slice(0, 5)\"\r\n        ><span\r\n          *ngIf=\"isFirst\"\r\n          [@enterAnimation]\r\n          style=\"font-weight: 500; font-size: small\"\r\n          >{{ val.exchange }}</span\r\n        ><span style=\"font-size: x-small\" class=\"margin-left-xs\">{{\r\n          val.price | number: \"1.2-3\"\r\n        }}</span></mat-grid-tile\r\n      >\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!isFirst\">\r\n      <mat-grid-tile *ngFor=\"let val of plotTickr.slice(5, 10)\"\r\n        ><span\r\n          *ngIf=\"!isFirst\"\r\n          [@enterAnimation]\r\n          style=\"font-weight: 500; font-size: small\"\r\n          >{{ val.exchange }}</span\r\n        ><span style=\"font-size: x-small\" class=\"margin-left-xs\">{{\r\n          val.price | number: \"1.2-3\"\r\n        }}</span></mat-grid-tile\r\n      >\r\n    </ng-container>\r\n  </mat-grid-list>\r\n</ng-container>\r\n<!-- tickr code ends  -->\r\n\r\n<div style=\"margin-top: 64px;\"></div>\r\n<div style=\"display: flex; flex-flow: wrap; justify-content: space-around;\" class=\"currencyExc\">\r\n  <div style=\"text-align: center;\">\r\n    <img [src]=\"currency1a.imageUrl\" alt=\"\" />\r\n    <button style=\"display: block; width: 100%;\" [matMenuTriggerFor]=\"currency1\" matTooltip=\"Select Currency\" mat-button\r\n      class=\"fiatBtn\">\r\n      <span>{{ currency1a.name | uppercase }}</span>\r\n      <mat-icon>arrow_drop_down</mat-icon>\r\n    </button>\r\n    <mat-form-field appearance=\"legacy\" style=\"margin-top: 4px;\"> \r\n      <mat-label>Currency 1</mat-label>\r\n      <input matInput placeholder=\"Enter a valid currency value\" type=\"number\" [(ngModel)]=\"currency1Value\"\r\n        (ngModelChange)=\"handleCal(1)\" [disabled]=\"rate1===undefined\">\r\n      <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n    </mat-form-field>\r\n  </div>\r\n  <div style=\"display: flex; align-items: center;\">\r\n    <mat-icon *ngIf=\"rate1 && rate2 && rate2>rate1\" style=\"font-size: xxx-large;\" matSuffix>chevron_right</mat-icon>\r\n    <mat-icon *ngIf=\"rate1 && rate2 && rate1>rate2\" style=\"font-size: xxx-large;\" matSuffix>chevron_left</mat-icon>\r\n    <mat-icon *ngIf=\"rate1==rate2\" style=\"font-size: xxx-large;\" matSuffix>sentiment_very_satisfied</mat-icon>\r\n  </div>\r\n  <div style=\"text-align: center;\">\r\n    <img [src]=\"currency2a.imageUrl\" alt=\"\" />\r\n    <button style=\"display: block; width: 100%;\" [matMenuTriggerFor]=\"currency2\" matTooltip=\"Select Currency\" mat-button\r\n      class=\"fiatBtn\">\r\n      <span>{{ currency2a.name | uppercase }}</span>\r\n      <mat-icon>arrow_drop_down</mat-icon>\r\n    </button>\r\n    <mat-form-field appearance=\"legacy\" style=\"margin-top: 4px;\">\r\n      <mat-label>Currency 2</mat-label>\r\n      <input matInput placeholder=\"Enter a valid currency value\" type=\"number\" [(ngModel)]=\"currency2Value\"\r\n        (ngModelChange)=\"handleCal(2)\" [disabled]=\"rate2===undefined\">\r\n      <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n    </mat-form-field>\r\n  </div>\r\n</div>\r\n<div style=\"margin-top: 64px;\"></div>\r\n<!-- fav code starts -->\r\n<div [hidden]=\"favoriteArr.length === 0\" id=\"favId\">\r\n  <h1 class=\"heading1\">Favorites</h1>\r\n  <p style=\"font-size: small; margin-left: 32px\">\r\n    * Select upto 3 Cryptocurrencies as favorites\r\n  </p>\r\n</div>\r\n<div *ngIf=\"favoriteArr.length > 0\">\r\n  <mat-accordion>\r\n    <mat-expansion-panel disabled>\r\n      <mat-expansion-panel-header class=\"expansionHeader\">\r\n        <mat-panel-title [style.width]=\"isScreenLtMedium ? '50%' : '30%'\">\r\n          <div style=\"display: flex; width: 100%\">\r\n            <span style=\"width: 20%; color: black\" *ngIf=\"!isScreenLtMedium\"\r\n              >Rank</span\r\n            >\r\n            <div\r\n              style=\"display: flex\"\r\n              [style.width]=\"isScreenLtMedium ? '100%' : '30%'\"\r\n            >\r\n              <div class=\"margin-left-xs\">\r\n                <p style=\"margin-bottom: 0px; color: black\">Name</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-panel-title>\r\n        <mat-panel-description\r\n          style=\"justify-content: space-between; width: 60%; color: black\"\r\n        >\r\n          <div style=\"margin-bottom: 0px; width: 33.33%\">\r\n            <span> Price </span>\r\n          </div>\r\n          <div\r\n            style=\"margin-bottom: 0px; width: 33.33%\"\r\n            *ngIf=\"!isScreenLtMedium\"\r\n          >\r\n            <span>Market Cap</span>\r\n          </div>\r\n          <div\r\n            style=\"margin-bottom: 0px; width: 33.33%\"\r\n            *ngIf=\"!isScreenLtMedium\"\r\n          >\r\n            <span>Change (24Hr)</span>\r\n          </div>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n    </mat-expansion-panel>\r\n    <mat-expansion-panel\r\n      *ngFor=\"let coin of favoriteArr\"\r\n      (opened)=\"getMarketsFav(coin.id)\"\r\n      (closed)=\"panelOpenState = false\"\r\n      #panelH\r\n    >\r\n      <mat-expansion-panel-header class=\"expansionHeader\">\r\n        <mat-panel-title [style.width]=\"isScreenLtMedium ? '50%' : '30%'\">\r\n          <div style=\"display: flex; width: 100%\">\r\n            <span style=\"width: 20%\" *ngIf=\"!isScreenLtMedium\">{{\r\n              coin.rank\r\n            }}</span>\r\n            <div\r\n              style=\"display: flex\"\r\n              [style.width]=\"isScreenLtMedium ? '100%' : '30%'\"\r\n            >\r\n              <img\r\n                src=\"{{ coin.icon }}\"\r\n                alt=\"{{ coin.name }}\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n              />\r\n              <div class=\"margin-left-xs\">\r\n                <p style=\"margin-bottom: 0px\">{{ coin.symbol }}</p>\r\n                <p style=\"margin-bottom: 0px; font-size: small\">\r\n                  {{ coin.name }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <mat-icon\r\n              color=\"primary\"\r\n              (click)=\"removeFromFav(coin)\"\r\n              (click)=\"$event.stopPropagation()\"\r\n              matTooltip=\"Remove from Favorites\"\r\n              >favorite</mat-icon\r\n            >\r\n          </div>\r\n        </mat-panel-title>\r\n        <mat-panel-description\r\n          style=\"justify-content: space-between; width: 60%\"\r\n        >\r\n          <div style=\"margin-bottom: 0px; width: 33.33%\">\r\n            <span>\r\n              {{ coin.price | currency: language }}\r\n            </span>\r\n          </div>\r\n          <div\r\n            style=\"margin-bottom: 0px; width: 33.33%\"\r\n            *ngIf=\"!isScreenLtMedium\"\r\n          >\r\n            <span> {{ coin.marketCap | currency: language }}</span>\r\n          </div>\r\n          <div\r\n            style=\"margin-bottom: 0px; width: 33.33%\"\r\n            *ngIf=\"!isScreenLtMedium\"\r\n          >\r\n            <span> {{ coin.priceChange1d / 100 | percent: \"1.2-5\" }}</span>\r\n          </div>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <div *ngIf=\"isScreenLtMedium\">\r\n        <h2>Currency Details</h2>\r\n        <mat-grid-list [cols]=\"1\" rowHeight=\"32px\">\r\n          <mat-grid-tile style=\"background: #3f51b5; color: white\"\r\n            ><span>Rank:</span>\r\n            <span class=\"margin-left-xs\">{{ coin.rank }}</span>\r\n          </mat-grid-tile>\r\n          <mat-grid-tile style=\"background: #3f51b5; color: white\"\r\n            ><span>Market Cap:</span>\r\n            <span class=\"margin-left-xs\">{{\r\n              coin.marketCap | currency: language\r\n            }}</span>\r\n          </mat-grid-tile>\r\n          <mat-grid-tile style=\"background: #3f51b5; color: white\"\r\n            ><span>Change (24Hr):</span>\r\n            <span class=\"margin-left-xs\">{{\r\n              coin.priceChange1d / 100 | percent: \"1.2-5\"\r\n            }}</span>\r\n          </mat-grid-tile>\r\n        </mat-grid-list>\r\n      </div>\r\n      <div *ngIf=\"favFetchStatus === 'done'\">\r\n        <h2 class=\"margin-top-xs\">Market Details</h2>\r\n        <mat-grid-list [cols]=\"3\" rowHeight=\"32px\">\r\n          <mat-grid-tile style=\"background: #3f51b5; color: white\"\r\n            >Exchange\r\n          </mat-grid-tile>\r\n          <mat-grid-tile style=\"background: #3f51b5; color: white\"\r\n            >Pair\r\n          </mat-grid-tile>\r\n          <mat-grid-tile style=\"background: #3f51b5; color: white\"\r\n            >Price\r\n          </mat-grid-tile>\r\n        </mat-grid-list>\r\n        <mat-grid-list\r\n          [cols]=\"3\"\r\n          rowHeight=\"32px\"\r\n          *ngFor=\"let market of marketListFav | slice: page.p3:page.p3 + 10\"\r\n        >\r\n          <mat-grid-tile>{{ market.exchange }} </mat-grid-tile>\r\n          <mat-grid-tile>{{ market.pair }} </mat-grid-tile>\r\n          <mat-grid-tile>{{ market.price | currency }} </mat-grid-tile>\r\n        </mat-grid-list>\r\n        <mat-paginator\r\n          *ngIf=\"marketList.length > 10\"\r\n          showFirstLastButtons\r\n          [length]=\"marketList.length\"\r\n          [pageSize]=\"10\"\r\n          (page)=\"changePage($event, 3)\"\r\n        >\r\n        </mat-paginator>\r\n      </div>\r\n      <div *ngIf=\"favFetchStatus !== 'done'\">\r\n        <p>fetching...</p>\r\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n      </div>\r\n    </mat-expansion-panel>\r\n  </mat-accordion>\r\n</div>\r\n<!-- fav code ends  -->\r\n\r\n<!-- main list code starts  -->\r\n<div>\r\n  <h1 class=\"heading1\">List of Cryptocurrencies</h1>\r\n</div>\r\n<!-- fiat dropdown code  -->\r\n<div style=\"text-align: end; margin-right: 32px\">\r\n  <p style=\"font-weight: 400\">Select FIAT currency</p>\r\n  <button\r\n    [matMenuTriggerFor]=\"fiat\"\r\n    matTooltip=\"Select FIAT\"\r\n    mat-button\r\n    class=\"fiatBtn\"\r\n  >\r\n    <span>{{ language | uppercase }}</span>\r\n    <mat-icon>arrow_drop_down</mat-icon>\r\n  </button>\r\n</div>\r\n<div *ngIf=\"mainStatus === 'done'\">\r\n  <mat-accordion>\r\n    <mat-expansion-panel disabled>\r\n      <mat-expansion-panel-header class=\"expansionHeader\">\r\n        <mat-panel-title [style.width]=\"isScreenLtMedium ? '50%' : '30%'\">\r\n          <div style=\"display: flex; width: 100%\">\r\n            <span\r\n              style=\"width: 20%; color: black; cursor: pointer\"\r\n              class=\"noSelection\"\r\n              (click)=\"sortBy('rank')\"\r\n              *ngIf=\"!isScreenLtMedium\"\r\n              >Rank<mat-icon *ngIf=\"rankAsc && showArr.indexOf('rank') !== -1\"\r\n                >arrow_drop_down</mat-icon\r\n              ><mat-icon *ngIf=\"!rankAsc && showArr.indexOf('rank') !== -1\"\r\n                >arrow_drop_up</mat-icon\r\n              ></span\r\n            >\r\n            <div\r\n              style=\"display: flex\"\r\n              [style.width]=\"isScreenLtMedium ? '100%' : '30%'\"\r\n            >\r\n              <div class=\"margin-left-xs\">\r\n                <p\r\n                  style=\"margin-bottom: 0px; color: black; cursor: pointer\"\r\n                  (click)=\"sortBy('symbol')\"\r\n                  class=\"noSelection\"\r\n                >\r\n                  Name<mat-icon\r\n                    *ngIf=\"nameAsc && showArr.indexOf('symbol') !== -1\"\r\n                    >arrow_drop_down</mat-icon\r\n                  ><mat-icon\r\n                    *ngIf=\"!nameAsc && showArr.indexOf('symbol') !== -1\"\r\n                    >arrow_drop_up</mat-icon\r\n                  >\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-panel-title>\r\n        <mat-panel-description\r\n          style=\"justify-content: space-between; width: 60%; color: black\"\r\n        >\r\n          <div\r\n            style=\"margin-bottom: 0px; width: 33.33%; cursor: pointer\"\r\n            (click)=\"sortBy('price')\"\r\n          >\r\n            <span class=\"noSelection\"\r\n              >Price<mat-icon\r\n                *ngIf=\"priceAsc && showArr.indexOf('price') !== -1\"\r\n                >arrow_drop_down</mat-icon\r\n              ><mat-icon *ngIf=\"!priceAsc && showArr.indexOf('price') !== -1\"\r\n                >arrow_drop_up</mat-icon\r\n              ></span\r\n            >\r\n          </div>\r\n          <div\r\n            *ngIf=\"!isScreenLtMedium\"\r\n            style=\"margin-bottom: 0px; width: 33.33%; cursor: pointer\"\r\n            (click)=\"sortBy('marketCap')\"\r\n          >\r\n            <span class=\"noSelection\"\r\n              >Market Cap<mat-icon\r\n                *ngIf=\"marketAsc && showArr.indexOf('marketCap') !== -1\"\r\n                >arrow_drop_down</mat-icon\r\n              ><mat-icon\r\n                *ngIf=\"!marketAsc && showArr.indexOf('marketCap') !== -1\"\r\n                >arrow_drop_up</mat-icon\r\n              ></span\r\n            >\r\n          </div>\r\n          <div\r\n            *ngIf=\"!isScreenLtMedium\"\r\n            style=\"margin-bottom: 0px; width: 33.33%; cursor: pointer\"\r\n            (click)=\"sortBy('priceChange1d')\"\r\n          >\r\n            <span class=\"noSelection\"\r\n              >Change (24Hr)<mat-icon\r\n                *ngIf=\"changeAsc && showArr.indexOf('priceChange1d') !== -1\"\r\n                >arrow_drop_down</mat-icon\r\n              ><mat-icon\r\n                *ngIf=\"!changeAsc && showArr.indexOf('priceChange1d') !== -1\"\r\n                >arrow_drop_up</mat-icon\r\n              ></span\r\n            >\r\n          </div>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n    </mat-expansion-panel>\r\n    <mat-expansion-panel\r\n      *ngFor=\"let coin of coins | slice: page.p1:page.p1 + 10\"\r\n      (opened)=\"getMarkets(coin.id)\"\r\n      (closed)=\"panelOpenState = false\"\r\n      #panelH\r\n    >\r\n      <mat-expansion-panel-header class=\"expansionHeader\">\r\n        <mat-panel-title [style.width]=\"isScreenLtMedium ? '50%' : '30%'\">\r\n          <div style=\"display: flex; width: 100%\">\r\n            <span style=\"width: 20%\" *ngIf=\"!isScreenLtMedium\">{{\r\n              coin.rank\r\n            }}</span>\r\n            <div\r\n              style=\"display: flex\"\r\n              [style.width]=\"isScreenLtMedium ? '100%' : '30%'\"\r\n            >\r\n              <img\r\n                src=\"{{ coin.icon }}\"\r\n                alt=\"{{ coin.name }}\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n              />\r\n              <div class=\"margin-left-xs\">\r\n                <p style=\"margin-bottom: 0px\">{{ coin.symbol }}</p>\r\n                <p style=\"margin-bottom: 0px; font-size: small\">\r\n                  {{ coin.name }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <mat-icon\r\n              *ngIf=\"\r\n                favoriteArrId.length < 3 &&\r\n                favoriteArrId.indexOf(coin.id) === -1\r\n              \"\r\n              color=\"primary\"\r\n              [class.showIcon]=\"!isScreenLtMedium\"\r\n              (click)=\"$event.stopPropagation()\"\r\n              (click)=\"addToFav(coin)\"\r\n              matTooltip=\"Add to Favorites\"\r\n              >favorite_border</mat-icon\r\n            >\r\n            <mat-icon\r\n              *ngIf=\"favoriteArrId.indexOf(coin.id) !== -1\"\r\n              color=\"primary\"\r\n              (click)=\"removeFromFav(coin)\"\r\n              (click)=\"$event.stopPropagation()\"\r\n              matTooltip=\"Remove from Favorites\"\r\n              >favorite</mat-icon\r\n            >\r\n          </div>\r\n        </mat-panel-title>\r\n        <mat-panel-description\r\n          style=\"justify-content: space-between; width: 60%\"\r\n        >\r\n          <div style=\"margin-bottom: 0px; width: 33.33%\">\r\n            <span>\r\n              {{ coin.price | currency: language }}\r\n            </span>\r\n          </div>\r\n          <div\r\n            style=\"margin-bottom: 0px; width: 33.33%\"\r\n            *ngIf=\"!isScreenLtMedium\"\r\n          >\r\n            <span> {{ coin.marketCap | currency: language }}</span>\r\n          </div>\r\n          <div\r\n            style=\"margin-bottom: 0px; width: 33.33%\"\r\n            *ngIf=\"!isScreenLtMedium\"\r\n          >\r\n            <span> {{ coin.priceChange1d / 100 | percent: \"1.2-5\" }}</span>\r\n          </div>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <div *ngIf=\"isScreenLtMedium\">\r\n        <h2>Currency Details</h2>\r\n        <mat-grid-list [cols]=\"1\" rowHeight=\"32px\">\r\n          <mat-grid-tile style=\"background: #3f51b5; color: white\"\r\n            ><span>Rank:</span>\r\n            <span class=\"margin-left-xs\">{{ coin.rank }}</span>\r\n          </mat-grid-tile>\r\n          <mat-grid-tile style=\"background: #3f51b5; color: white\"\r\n            ><span>Market Cap:</span>\r\n            <span class=\"margin-left-xs\">{{\r\n              coin.marketCap | currency: language\r\n            }}</span>\r\n          </mat-grid-tile>\r\n          <mat-grid-tile style=\"background: #3f51b5; color: white\"\r\n            ><span>Change (24Hr):</span>\r\n            <span class=\"margin-left-xs\">{{\r\n              coin.priceChange1d / 100 | percent: \"1.2-5\"\r\n            }}</span>\r\n          </mat-grid-tile>\r\n        </mat-grid-list>\r\n      </div>\r\n      <div *ngIf=\"fetchStatus === 'done'\">\r\n        <h2 class=\"margin-top-xs\">Market Details</h2>\r\n        <mat-grid-list [cols]=\"3\" rowHeight=\"32px\">\r\n          <mat-grid-tile style=\"background: #3f51b5; color: white\"\r\n            >Exchange\r\n          </mat-grid-tile>\r\n          <mat-grid-tile style=\"background: #3f51b5; color: white\"\r\n            >Pair\r\n          </mat-grid-tile>\r\n          <mat-grid-tile style=\"background: #3f51b5; color: white\"\r\n            >Price\r\n          </mat-grid-tile>\r\n        </mat-grid-list>\r\n        <mat-grid-list\r\n          [cols]=\"3\"\r\n          rowHeight=\"32px\"\r\n          *ngFor=\"let market of marketList | slice: page.p2:page.p2 + 10\"\r\n        >\r\n          <mat-grid-tile>{{ market.exchange }} </mat-grid-tile>\r\n          <mat-grid-tile>{{ market.pair }} </mat-grid-tile>\r\n          <mat-grid-tile>{{ market.price | currency }} </mat-grid-tile>\r\n        </mat-grid-list>\r\n        <mat-paginator\r\n          *ngIf=\"marketList.length > 10\"\r\n          showFirstLastButtons\r\n          [length]=\"marketList.length\"\r\n          [pageSize]=\"10\"\r\n          (page)=\"changePage($event, 2)\"\r\n        >\r\n        </mat-paginator>\r\n      </div>\r\n      <div *ngIf=\"fetchStatus !== 'done'\">\r\n        <p>fetching...</p>\r\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n      </div>\r\n    </mat-expansion-panel>\r\n  </mat-accordion>\r\n  <mat-paginator\r\n    *ngIf=\"coins.length > 10\"\r\n    showFirstLastButtons\r\n    [length]=\"coins.length\"\r\n    [pageSize]=\"10\"\r\n    (page)=\"changePage($event, 1)\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n<div *ngIf=\"mainStatus !== 'done'\">\r\n  <mat-spinner style=\"margin: auto; justify-content: center\"></mat-spinner>\r\n</div>\r\n<!-- main-list code ends  -->\r\n\r\n<!-- fiat dropdown  -->\r\n<mat-menu #fiat=\"matMenu\">\r\n  <ng-template matMenuContent>\r\n    <button\r\n      mat-menu-item\r\n      style=\"display: flex; justify-content: space-between\"\r\n      *ngFor=\"let lang of fiatsArr\"\r\n      (click)=\"setFiat(lang.name)\"\r\n    >\r\n      <span\r\n        style=\"\r\n          width: 100%;\r\n          display: flex;\r\n          justify-content: center;\r\n          text-align: center;\r\n          align-items: center;\r\n        \"\r\n      >\r\n        <img class=\"img\" [src]=\"lang.imageUrl\" />\r\n        <span style=\"margin-left: 0.5rem\">{{ lang.name }}</span>\r\n        <mat-icon style=\"margin-left: 0.5rem\" *ngIf=\"lang.name === language\"\r\n          >check</mat-icon\r\n        >\r\n      </span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n\r\n<!-- tickr dropdown  -->\r\n<mat-menu #tickr=\"matMenu\">\r\n  <ng-template matMenuContent>\r\n    <button\r\n      mat-menu-item\r\n      style=\"display: flex; justify-content: space-between\"\r\n      *ngFor=\"let lang of tickrArr; let i = index\"\r\n      (click)=\"setTickr(i)\"\r\n    >\r\n      <span\r\n        style=\"\r\n          width: 100%;\r\n          display: flex;\r\n          justify-content: center;\r\n          text-align: center;\r\n          align-items: center;\r\n        \"\r\n      >\r\n        <img class=\"img\" [src]=\"lang.icon\" />\r\n        <span style=\"margin-left: 0.5rem\">{{ lang.symbol }}</span>\r\n        <mat-icon\r\n          style=\"margin-left: 0.5rem\"\r\n          *ngIf=\"lang.symbol === tickrSymbol\"\r\n          >check</mat-icon\r\n        >\r\n      </span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n\r\n\r\n<!-- c1 dropdown  -->\r\n<mat-menu #currency1=\"matMenu\">\r\n  <ng-template matMenuContent>\r\n    <button\r\n      mat-menu-item\r\n      style=\"display: flex; justify-content: space-between\"\r\n      *ngFor=\"let lang of fiatsArr\"\r\n      (click)=\"dealCurrency(lang,1)\"\r\n    >\r\n      <span\r\n        style=\"\r\n          width: 100%;\r\n          display: flex;\r\n          justify-content: center;\r\n          text-align: center;\r\n          align-items: center;\r\n        \"\r\n      >\r\n        <img class=\"img\" [src]=\"lang.imageUrl\" />\r\n        <span style=\"margin-left: 0.5rem\">{{ lang.name }}</span>\r\n        <mat-icon style=\"margin-left: 0.5rem\" *ngIf=\"lang.name === currency1a.name\"\r\n          >check</mat-icon\r\n        >\r\n      </span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n\r\n<!-- c2 dropdown  -->\r\n<mat-menu #currency2=\"matMenu\">\r\n  <ng-template matMenuContent style=\"width: 100%;\">\r\n    <button\r\n      mat-menu-item\r\n      style=\"display: flex; justify-content: space-between\"\r\n      *ngFor=\"let lang of fiatsArr\"\r\n      (click)=\"dealCurrency(lang,2)\"\r\n    >\r\n      <span\r\n        style=\"\r\n          width: 100%;\r\n          display: flex;\r\n          justify-content: center;\r\n          text-align: center;\r\n          align-items: center;\r\n        \"\r\n      >\r\n        <img class=\"img\" [src]=\"lang.imageUrl\" />\r\n        <span style=\"margin-left: 0.5rem\">{{ lang.name }}</span>\r\n        <mat-icon style=\"margin-left: 0.5rem\" *ngIf=\"lang.name === currency2a.name\"\r\n          >check</mat-icon\r\n        >\r\n      </span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { CurrencyExchangeComponent } from './currency-exchange/currency-exchange.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, CurrencyExchangeComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatExpansionModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatGridListModule,\r\n    MatTooltipModule,\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-currency-exchange',\n  templateUrl: './currency-exchange.component.html',\n  styleUrls: ['./currency-exchange.component.scss']\n})\nexport class CurrencyExchangeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>currency-exchange works!</p>\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst commonPrefix = `https://api.coinstats.app/public/v1`;\r\nconst cryptoEndPoints = {\r\n  GET_COINS: `${commonPrefix}/coins`,\r\n  // GET_COIN:`${commonPrefix}/coins`,\r\n  GET_PRICE_CHART: `${commonPrefix}/charts`,\r\n  GET_EXCHANGES: `${commonPrefix}/exchanges`,\r\n  GET_MARKETS: `${commonPrefix}/markets`,\r\n  GET_TICKERS: `${commonPrefix}/tickers`,\r\n  GET_FIATS: `${commonPrefix}/fiats`,\r\n  GET_NEWS: `${commonPrefix}/news`,\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CryptoApiService {\r\n  constructor(private http: HttpClient) {}\r\n  getCoinsList(currency?: any): Observable<null> {\r\n    if (currency) {\r\n      return this.http.get<null>(\r\n        `${cryptoEndPoints.GET_COINS}?currency=${currency}`\r\n      );\r\n    }\r\n    return this.http.get<null>(`${cryptoEndPoints.GET_COINS}`);\r\n  }\r\n  getMarkets(coin: any): Observable<null> {\r\n    return this.http.get<null>(`${cryptoEndPoints.GET_MARKETS}?coinId=${coin}`);\r\n  }\r\n  getFiats(): Observable<null> {\r\n    return this.http.get<null>(`${cryptoEndPoints.GET_FIATS}`);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}